# Pytest, pylint, codecov and publish. That's is folks
name: Build and publish

env:
  COVERAGE_ARTIFACT_BASE_NAME: coverage-${{ github.run_id }}

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  run-tests-and-coverage:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12"]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Cache uv environment
        uses: actions/cache@v4
        with:
          path: |
            .venv
            ~/.cache/uv
          key: uv-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('uv.lock') }}
          restore-keys: |
            uv-${{ runner.os }}-${{ matrix.python-version }}-
      - name: Install uv
        run: python -m pip install --upgrade pip uv
      - name: Sync project dependencies
        run: uv sync --dev
      - name: Run linting
        run: |
          uv run pylint --fail-under 10.0 envcast
          uv run mypy .
      - name: Build package and verify installation
        run: uv build
      - name: Run tests
        run: uv run pytest -n 2 . --cov=./ --cov-report=xml
      - name: Upload code coverage to be accessed in next job
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.COVERAGE_ARTIFACT_BASE_NAME }}-${{ matrix.python-version }}
          path: ./coverage.xml

  # TIP FOR FUTURE: canonical layout! checkout, unpack is strictly necessary in steps section!111
  upload-codecov:
    runs-on: ubuntu-latest
    needs: run-tests-and-coverage
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          pattern: ${{ env.COVERAGE_ARTIFACT_BASE_NAME }}-*
          merge-multiple: true
      - uses: codecov/codecov-action@v4
        name: Upload coverage to Codecov
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage.xml
          fail_ci_if_error: true

  publish-pypi:
    needs: upload-codecov
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Install uv
        run: python -m pip install --upgrade pip uv
      - name: Build distributions
        run: uv build
      - name: Publish package
        continue-on-error: true
        env:
          TWINE_USERNAME: ${{ secrets.FLIT_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.FLIT_PASSWORD }}
        run: uvx twine upload --non-interactive --skip-existing dist/*
